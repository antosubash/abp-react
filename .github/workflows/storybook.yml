name: Storybook CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**/*.stories.@(js|jsx|ts|tsx)"
      - "src/**/*.mdx"
      - "src/.storybook/**"
      - "src/components/**"
      - "src/stories/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**/*.stories.@(js|jsx|ts|tsx)"
      - "src/**/*.mdx"
      - "src/.storybook/**"
      - "src/components/**"
      - "src/stories/**"

jobs:
  storybook:
    defaults:
      run:
        working-directory: ./src
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: 9
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Build Storybook
      run: pnpm run build-storybook

    - name: Test Storybook
      run: pnpm run test-storybook

    - name: Upload Storybook build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: storybook-static
        path: src/storybook-static
        retention-days: 30

  storybook-docker:
    defaults:
      run:
        working-directory: ./src
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: storybook
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Storybook Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./src
        file: ./src/Dockerfile.storybook
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/storybook:latest
          ghcr.io/${{ github.repository }}/storybook:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

 
"use strict";(self.webpackChunkabp_react=self.webpackChunkabp_react||[]).push([[5426],{7286:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/custom-hooks","title":"Custom Hooks","description":"Custom hooks are a powerful feature in React that allows you to extract and reuse stateful logic between components. In ABP React, custom hooks are extensively used to encapsulate API calls, authentication logic, and other common functionality.","source":"@site/docs/development/custom-hooks.md","sourceDirName":"development","slug":"/development/custom-hooks","permalink":"/abp-react/docs/development/custom-hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/antosubash/abp-react/tree/main/docs/docs/development/custom-hooks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Development Setup","permalink":"/abp-react/docs/development/setup"},"next":{"title":"Testing Guide","permalink":"/abp-react/docs/development/testing"}}');var o=t(4848),r=t(8453);const i={sidebar_position:2},a="Custom Hooks",c={},l=[{value:"\ud83c\udfaf What are Custom Hooks?",id:"-what-are-custom-hooks",level:2},{value:"\ud83c\udfd7\ufe0f Hook Structure",id:"\ufe0f-hook-structure",level:2},{value:"Basic Hook Template",id:"basic-hook-template",level:3},{value:"\ud83d\udd27 API Hooks",id:"-api-hooks",level:2},{value:"useApi Hook",id:"useapi-hook",level:3},{value:"useMutation Hook",id:"usemutation-hook",level:3},{value:"\ud83d\udd10 Authentication Hooks",id:"-authentication-hooks",level:2},{value:"useAuth Hook",id:"useauth-hook",level:3},{value:"usePermission Hook",id:"usepermission-hook",level:3},{value:"usePermissions Hook",id:"usepermissions-hook",level:3},{value:"\ud83d\udcca Data Management Hooks",id:"-data-management-hooks",level:2},{value:"useLocalStorage Hook",id:"uselocalstorage-hook",level:3},{value:"useDebounce Hook",id:"usedebounce-hook",level:3},{value:"usePrevious Hook",id:"useprevious-hook",level:3},{value:"\ud83c\udfa8 UI Hooks",id:"-ui-hooks",level:2},{value:"useMediaQuery Hook",id:"usemediaquery-hook",level:3},{value:"useClickOutside Hook",id:"useclickoutside-hook",level:3},{value:"useScrollPosition Hook",id:"usescrollposition-hook",level:3},{value:"\ud83d\udd04 State Management Hooks",id:"-state-management-hooks",level:2},{value:"useReducer Hook",id:"usereducer-hook",level:3},{value:"\ud83e\uddea Testing Hooks",id:"-testing-hooks",level:2},{value:"Testing Custom Hooks",id:"testing-custom-hooks",level:3},{value:"\ud83d\udcdd Best Practices",id:"-best-practices",level:2},{value:"1. Naming Conventions",id:"1-naming-conventions",level:3},{value:"2. Return Values",id:"2-return-values",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"4. Dependencies",id:"4-dependencies",level:3},{value:"\ud83d\udcda Related Documentation",id:"-related-documentation",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"custom-hooks",children:"Custom Hooks"})}),"\n",(0,o.jsx)(n.p,{children:"Custom hooks are a powerful feature in React that allows you to extract and reuse stateful logic between components. In ABP React, custom hooks are extensively used to encapsulate API calls, authentication logic, and other common functionality."}),"\n",(0,o.jsx)(n.h2,{id:"-what-are-custom-hooks",children:"\ud83c\udfaf What are Custom Hooks?"}),"\n",(0,o.jsx)(n.p,{children:"Custom hooks are JavaScript functions that:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Start with the word "use" (React convention)'}),"\n",(0,o.jsx)(n.li,{children:"Can use other React hooks internally"}),"\n",(0,o.jsx)(n.li,{children:"Return values, functions, or both"}),"\n",(0,o.jsx)(n.li,{children:"Can accept parameters"}),"\n",(0,o.jsx)(n.li,{children:"Follow the same rules as React hooks"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-hook-structure",children:"\ud83c\udfd7\ufe0f Hook Structure"}),"\n",(0,o.jsx)(n.h3,{id:"basic-hook-template",children:"Basic Hook Template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react';\n\nexport const useCustomHook = (initialValue: any) => {\n  // State declarations\n  const [state, setState] = useState(initialValue);\n  \n  // Effects\n  useEffect(() => {\n    // Side effects\n  }, []);\n  \n  // Helper functions\n  const updateState = (newValue: any) => {\n    setState(newValue);\n  };\n  \n  // Return values and functions\n  return {\n    state,\n    updateState,\n  };\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-api-hooks",children:"\ud83d\udd27 API Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"useapi-hook",children:"useApi Hook"}),"\n",(0,o.jsx)(n.p,{children:"A generic hook for making API calls:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react';\nimport { api } from '@/lib/api';\n\ninterface UseApiOptions<T> {\n  url: string;\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  body?: any;\n  dependencies?: any[];\n  enabled?: boolean;\n}\n\nexport const useApi = <T>({\n  url,\n  method = 'GET',\n  body,\n  dependencies = [],\n  enabled = true,\n}: UseApiOptions<T>) => {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const fetchData = async () => {\n    if (!enabled) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await api.request({\n        url,\n        method,\n        data: body,\n      });\n      setData(response.data);\n    } catch (err) {\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, dependencies);\n\n  const refetch = () => {\n    fetchData();\n  };\n\n  return {\n    data,\n    loading,\n    error,\n    refetch,\n  };\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usemutation-hook",children:"useMutation Hook"}),"\n",(0,o.jsx)(n.p,{children:"For handling API mutations (POST, PUT, DELETE):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState } from 'react';\nimport { api } from '@/lib/api';\n\ninterface UseMutationOptions<T, R> {\n  url: string;\n  method?: 'POST' | 'PUT' | 'DELETE';\n  onSuccess?: (data: R) => void;\n  onError?: (error: Error) => void;\n}\n\nexport const useMutation = <T, R>({\n  url,\n  method = 'POST',\n  onSuccess,\n  onError,\n}: UseMutationOptions<T, R>) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<R | null>(null);\n\n  const mutate = async (body: T) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await api.request({\n        url,\n        method,\n        data: body,\n      });\n      \n      setData(response.data);\n      onSuccess?.(response.data);\n      return response.data;\n    } catch (err) {\n      const error = err as Error;\n      setError(error);\n      onError?.(error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    mutate,\n    loading,\n    error,\n    data,\n  };\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-authentication-hooks",children:"\ud83d\udd10 Authentication Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"useauth-hook",children:"useAuth Hook"}),"\n",(0,o.jsx)(n.p,{children:"Manage authentication state:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '@/contexts/AuthContext';\n\nexport const useAuth = () => {\n  const { user, login, logout, refreshToken } = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is authenticated on mount\n    const checkAuth = async () => {\n      try {\n        await refreshToken();\n      } catch (error) {\n        // User is not authenticated\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    checkAuth();\n  }, []);\n\n  return {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    refreshToken,\n  };\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usepermission-hook",children:"usePermission Hook"}),"\n",(0,o.jsx)(n.p,{children:"Check user permissions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useContext, useMemo } from 'react';\nimport { AuthContext } from '@/contexts/AuthContext';\n\nexport const usePermission = (permission: string) => {\n  const { user } = useContext(AuthContext);\n\n  return useMemo(() => {\n    if (!user || !user.permissions) {\n      return false;\n    }\n\n    return user.permissions.includes(permission);\n  }, [user, permission]);\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usepermissions-hook",children:"usePermissions Hook"}),"\n",(0,o.jsx)(n.p,{children:"Check multiple permissions at once:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useContext, useMemo } from 'react';\nimport { AuthContext } from '@/contexts/AuthContext';\n\nexport const usePermissions = (permissions: string[]) => {\n  const { user } = useContext(AuthContext);\n\n  return useMemo(() => {\n    if (!user || !user.permissions) {\n      return permissions.reduce((acc, permission) => {\n        acc[permission] = false;\n        return acc;\n      }, {} as Record<string, boolean>);\n    }\n\n    return permissions.reduce((acc, permission) => {\n      acc[permission] = user.permissions.includes(permission);\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [user, permissions]);\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-data-management-hooks",children:"\ud83d\udcca Data Management Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"uselocalstorage-hook",children:"useLocalStorage Hook"}),"\n",(0,o.jsx)(n.p,{children:"Persist data in localStorage:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { useState, useEffect } from \'react\';\n\nexport const useLocalStorage = <T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => void] => {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(`Error reading localStorage key "${key}":`, error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(`Error setting localStorage key "${key}":`, error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"usedebounce-hook",children:"useDebounce Hook"}),"\n",(0,o.jsx)(n.p,{children:"Debounce values for search inputs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react';\n\nexport const useDebounce = <T>(value: T, delay: number): T => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"useprevious-hook",children:"usePrevious Hook"}),"\n",(0,o.jsx)(n.p,{children:"Track previous values:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useRef, useEffect } from 'react';\n\nexport const usePrevious = <T>(value: T): T | undefined => {\n  const ref = useRef<T>();\n  \n  useEffect(() => {\n    ref.current = value;\n  });\n  \n  return ref.current;\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-ui-hooks",children:"\ud83c\udfa8 UI Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"usemediaquery-hook",children:"useMediaQuery Hook"}),"\n",(0,o.jsx)(n.p,{children:"Respond to media queries:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react';\n\nexport const useMediaQuery = (query: string): boolean => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    \n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n\n    const listener = () => setMatches(media.matches);\n    media.addEventListener('change', listener);\n    \n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n\n  return matches;\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"useclickoutside-hook",children:"useClickOutside Hook"}),"\n",(0,o.jsx)(n.p,{children:"Detect clicks outside an element:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useEffect, RefObject } from 'react';\n\nexport const useClickOutside = (\n  ref: RefObject<HTMLElement>,\n  handler: (event: MouseEvent | TouchEvent) => void\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usescrollposition-hook",children:"useScrollPosition Hook"}),"\n",(0,o.jsx)(n.p,{children:"Track scroll position:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react';\n\nexport const useScrollPosition = () => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset);\n    };\n\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return scrollPosition;\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-state-management-hooks",children:"\ud83d\udd04 State Management Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"usereducer-hook",children:"useReducer Hook"}),"\n",(0,o.jsx)(n.p,{children:"Complex state management:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { useReducer, useCallback } from 'react';\n\ninterface FormState {\n  values: Record<string, any>;\n  errors: Record<string, string>;\n  touched: Record<string, boolean>;\n  isSubmitting: boolean;\n}\n\ntype FormAction =\n  | { type: 'SET_VALUE'; field: string; value: any }\n  | { type: 'SET_ERROR'; field: string; error: string }\n  | { type: 'SET_TOUCHED'; field: string }\n  | { type: 'SET_SUBMITTING'; isSubmitting: boolean }\n  | { type: 'RESET' };\n\nconst formReducer = (state: FormState, action: FormAction): FormState => {\n  switch (action.type) {\n    case 'SET_VALUE':\n      return {\n        ...state,\n        values: { ...state.values, [action.field]: action.value },\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        errors: { ...state.errors, [action.field]: action.error },\n      };\n    case 'SET_TOUCHED':\n      return {\n        ...state,\n        touched: { ...state.touched, [action.field]: true },\n      };\n    case 'SET_SUBMITTING':\n      return { ...state, isSubmitting: action.isSubmitting };\n    case 'RESET':\n      return {\n        values: {},\n        errors: {},\n        touched: {},\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialValues: Record<string, any> = {}) => {\n  const [state, dispatch] = useReducer(formReducer, {\n    values: initialValues,\n    errors: {},\n    touched: {},\n    isSubmitting: false,\n  });\n\n  const setValue = useCallback((field: string, value: any) => {\n    dispatch({ type: 'SET_VALUE', field, value });\n  }, []);\n\n  const setError = useCallback((field: string, error: string) => {\n    dispatch({ type: 'SET_ERROR', field, error });\n  }, []);\n\n  const setTouched = useCallback((field: string) => {\n    dispatch({ type: 'SET_TOUCHED', field });\n  }, []);\n\n  const setSubmitting = useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_SUBMITTING', isSubmitting });\n  }, []);\n\n  const reset = useCallback(() => {\n    dispatch({ type: 'RESET' });\n  }, []);\n\n  return {\n    ...state,\n    setValue,\n    setError,\n    setTouched,\n    setSubmitting,\n    reset,\n  };\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-testing-hooks",children:"\ud83e\uddea Testing Hooks"}),"\n",(0,o.jsx)(n.h3,{id:"testing-custom-hooks",children:"Testing Custom Hooks"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { renderHook, act } from '@testing-library/react';\nimport { useCounter } from './useCounter';\n\ndescribe('useCounter', () => {\n  it('should increment counter', () => {\n    const { result } = renderHook(() => useCounter(0));\n\n    act(() => {\n      result.current.increment();\n    });\n\n    expect(result.current.count).toBe(1);\n  });\n\n  it('should decrement counter', () => {\n    const { result } = renderHook(() => useCounter(1));\n\n    act(() => {\n      result.current.decrement();\n    });\n\n    expect(result.current.count).toBe(0);\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udcdd Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"1-naming-conventions",children:"1. Naming Conventions"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Always start with "use"'}),"\n",(0,o.jsx)(n.li,{children:"Use descriptive names"}),"\n",(0,o.jsx)(n.li,{children:"Follow camelCase"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Good\nexport const useUserProfile = () => { /* ... */ };\nexport const useApiCall = () => { /* ... */ };\n\n// Avoid\nexport const getUserProfile = () => { /* ... */ };\nexport const apiCall = () => { /* ... */ };\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-return-values",children:"2. Return Values"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Return objects for multiple values"}),"\n",(0,o.jsx)(n.li,{children:"Use consistent return types"}),"\n",(0,o.jsx)(n.li,{children:"Document return values"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Good\nexport const useUser = (id: string) => {\n  // ... implementation\n  return {\n    user,\n    loading,\n    error,\n    refetch,\n  };\n};\n\n// Avoid\nexport const useUser = (id: string) => {\n  // ... implementation\n  return [user, loading, error, refetch]; // Array is less clear\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export const useApiWithError = (url: string) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await api.get(url);\n      setData(response.data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, error, loading, refetch: fetchData };\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-dependencies",children:"4. Dependencies"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Include all dependencies in useEffect"}),"\n",(0,o.jsx)(n.li,{children:"Use useCallback for functions passed as props"}),"\n",(0,o.jsx)(n.li,{children:"Use useMemo for expensive calculations"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export const useExpensiveCalculation = (data: any[]) => {\n  const result = useMemo(() => {\n    return data.reduce((acc, item) => acc + item.value, 0);\n  }, [data]);\n\n  const handleClick = useCallback(() => {\n    console.log('Result:', result);\n  }, [result]);\n\n  return { result, handleClick };\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-related-documentation",children:"\ud83d\udcda Related Documentation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/fundamentals/api-integration",children:"API Integration"})})," - Using hooks with API calls"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/fundamentals/authentication",children:"Authentication"})})," - Authentication hooks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/development/testing",children:"Testing Guide"})})," - Testing custom hooks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/development/performance",children:"Performance Optimization"})})," - Optimizing hook performance"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"Custom hooks are a fundamental part of ABP React's architecture, providing reusable logic across components. By following these patterns and best practices, you can create maintainable and efficient custom hooks that enhance your application's functionality."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkabp_react=self.webpackChunkabp_react||[]).push([[3259],{1864:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"fundamentals/multi-tenancy","title":"Multi-tenancy","description":"Overview","source":"@site/docs/fundamentals/multi-tenancy.md","sourceDirName":"fundamentals","slug":"/fundamentals/multi-tenancy","permalink":"/abp-react/docs/fundamentals/multi-tenancy","draft":false,"unlisted":false,"editUrl":"https://github.com/antosubash/abp-react/tree/main/docs/docs/fundamentals/multi-tenancy.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"API Integration","permalink":"/abp-react/docs/fundamentals/api-integration"},"next":{"title":"Admin Interface","permalink":"/abp-react/docs/fundamentals/admin-interface"}}');var i=t(4848),s=t(8453);const l={sidebar_position:4},r="Multi-tenancy",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Tenant Resolution",id:"tenant-resolution",level:2},{value:"Host-based Resolution",id:"host-based-resolution",level:3},{value:"Tenant Management",id:"tenant-management",level:2},{value:"Tenant List Component",id:"tenant-list-component",level:3},{value:"API Integration",id:"api-integration",level:2},{value:"Tenant Context in Requests",id:"tenant-context-in-requests",level:3},{value:"Tenant Features",id:"tenant-features",level:2},{value:"Feature Management",id:"feature-management",level:3},{value:"Tenant Settings",id:"tenant-settings",level:3},{value:"Tenant Operations",id:"tenant-operations",level:2},{value:"Creating Tenants",id:"creating-tenants",level:3},{value:"Updating Tenants",id:"updating-tenants",level:3},{value:"Deleting Tenants",id:"deleting-tenants",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Related Components",id:"related-components",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"multi-tenancy",children:"Multi-tenancy"})}),"\n",(0,i.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(e.p,{children:"ABP React implements a comprehensive multi-tenancy system that allows the application to serve multiple tenants while maintaining data isolation and tenant-specific configurations."}),"\n",(0,i.jsx)(e.h2,{id:"tenant-resolution",children:"Tenant Resolution"}),"\n",(0,i.jsx)(e.h3,{id:"host-based-resolution",children:"Host-based Resolution"}),"\n",(0,i.jsx)(e.p,{children:"The application resolves tenants based on the host header:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"export async function GET() {\n  const session = await getSession()\n  const host = (await headers()).get('host')\n\n  if (session.tenantId) {\n    return\n  }\n\n  try {\n    const { data } = await tenantGetTenantGuid({ query: { host: host! } })\n    session.tenantId = data ?? 'default'\n  } catch (error) {\n    session.tenantId = 'default'\n  }\n\n  await session.save()\n  redirect('/')\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"tenant-management",children:"Tenant Management"}),"\n",(0,i.jsx)(e.h3,{id:"tenant-list-component",children:"Tenant List Component"}),"\n",(0,i.jsx)(e.p,{children:"The application provides a tenant management interface:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"export const TenantList = () => {\n  // ... tenant list implementation\n  const defaultColumns: ColumnDef<TenantDto>[] = [\n    {\n      header: 'Tenant Management',\n      columns: [\n        {\n          accessorKey: 'actions',\n          header: 'Actions',\n          cell: (info) => {\n            return (\n              <PermissionActions\n                actions={[\n                  {\n                    icon: 'features',\n                    policy: 'AbpTenantManagement.Tenants.ManageFeatures',\n                    callback: () => {\n                      // ... feature management\n                    },\n                  },\n                  {\n                    icon: 'pencil',\n                    policy: 'AbpTenantManagement.Tenants.Update',\n                    callback: () => {\n                      // ... tenant update\n                    },\n                  },\n                ]}\n              />\n            )\n          },\n        },\n      ],\n    },\n  ]\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"api-integration",children:"API Integration"}),"\n",(0,i.jsx)(e.h3,{id:"tenant-context-in-requests",children:"Tenant Context in Requests"}),"\n",(0,i.jsx)(e.p,{children:"The tenant context is automatically included in API requests:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"APIClient.interceptors.request.use(async (options) => {\n  const session = await getSession()\n  options.headers.set('__tenant', session.tenantId ?? '')\n  return options\n})\n"})}),"\n",(0,i.jsx)(e.h2,{id:"tenant-features",children:"Tenant Features"}),"\n",(0,i.jsx)(e.h3,{id:"feature-management",children:"Feature Management"}),"\n",(0,i.jsx)(e.p,{children:"Tenants can have specific features enabled/disabled:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"interface TenantExtraProperties {\n  features?: {\n    [key: string]: boolean\n  }\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"tenant-settings",children:"Tenant Settings"}),"\n",(0,i.jsx)(e.p,{children:"Each tenant can have its own configuration:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Custom domain"}),"\n",(0,i.jsx)(e.li,{children:"Feature flags"}),"\n",(0,i.jsx)(e.li,{children:"Connection strings"}),"\n",(0,i.jsx)(e.li,{children:"Custom settings"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"tenant-operations",children:"Tenant Operations"}),"\n",(0,i.jsx)(e.h3,{id:"creating-tenants",children:"Creating Tenants"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"const tenantCreate = async (data: TenantCreateDto) => {\n  return await APIClient.post('/api/multi-tenancy/tenants', data)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"updating-tenants",children:"Updating Tenants"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"const tenantUpdate = async (id: string, data: TenantUpdateDto) => {\n  return await APIClient.put(`/api/multi-tenancy/tenants/${id}`, data)\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"deleting-tenants",children:"Deleting Tenants"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"const tenantDelete = async (id: string) => {\n  return await APIClient.delete(`/api/multi-tenancy/tenants/${id}`)\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Tenant Isolation"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Maintain strict data separation"}),"\n",(0,i.jsx)(e.li,{children:"Validate tenant context"}),"\n",(0,i.jsx)(e.li,{children:"Handle cross-tenant operations carefully"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Performance"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Cache tenant information"}),"\n",(0,i.jsx)(e.li,{children:"Optimize tenant resolution"}),"\n",(0,i.jsx)(e.li,{children:"Minimize tenant-specific operations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Security"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Validate tenant access"}),"\n",(0,i.jsx)(e.li,{children:"Implement proper authorization"}),"\n",(0,i.jsx)(e.li,{children:"Secure tenant-specific data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,i.jsx)(e.p,{children:"Required environment variables:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"NEXT_PUBLIC_API_URL"}),": API endpoint for tenant operations"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"NEXT_PUBLIC_APP_URL"}),": Application base URL"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"related-components",children:"Related Components"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/docs/fundamentals/authentication",children:"Authentication"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/docs/fundamentals/session-management",children:"Session Management"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"/docs/fundamentals/middleware",children:"Middleware"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>r});var a=t(6540);const i={},s=a.createContext(i);function l(n){const e=a.useContext(s);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);
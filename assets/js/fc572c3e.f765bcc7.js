"use strict";(self.webpackChunkabp_react=self.webpackChunkabp_react||[]).push([[1763],{894:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"fundamentals/permissions","title":"Permission Management","description":"ABP React implements a comprehensive permission system that integrates with the ABP Framework\'s authorization capabilities. This system provides fine-grained control over user access to features, pages, and data throughout the application.","source":"@site/docs/fundamentals/permissions.md","sourceDirName":"fundamentals","slug":"/fundamentals/permissions","permalink":"/abp-react/docs/fundamentals/permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/antosubash/abp-react/tree/main/docs/docs/fundamentals/permissions.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Content Management System (CMS)","permalink":"/abp-react/docs/fundamentals/cms"},"next":{"title":"CMS Overview","permalink":"/abp-react/docs/fundamentals/cms-overview"}}');var r=s(4848),o=s(8453);const t={sidebar_position:6},a="Permission Management",c={},l=[{value:"\ud83d\udd10 Permission System Overview",id:"-permission-system-overview",level:2},{value:"Core Concepts",id:"core-concepts",level:3},{value:"Permission Hierarchy",id:"permission-hierarchy",level:3},{value:"\ud83c\udfaf Permission Types",id:"-permission-types",level:2},{value:"1. Feature Permissions",id:"1-feature-permissions",level:3},{value:"2. CRUD Permissions",id:"2-crud-permissions",level:3},{value:"3. Custom Permissions",id:"3-custom-permissions",level:3},{value:"\ud83c\udfd7\ufe0f Permission Implementation",id:"\ufe0f-permission-implementation",level:2},{value:"1. Permission Definition",id:"1-permission-definition",level:3},{value:"2. Frontend Permission Usage",id:"2-frontend-permission-usage",level:3},{value:"\ud83d\udd27 Permission Hooks",id:"-permission-hooks",level:2},{value:"usePermission Hook",id:"usepermission-hook",level:3},{value:"usePermissions Hook",id:"usepermissions-hook",level:3},{value:"\ud83d\udee1\ufe0f Route Protection",id:"\ufe0f-route-protection",level:2},{value:"Protected Routes",id:"protected-routes",level:3},{value:"Conditional Navigation",id:"conditional-navigation",level:3},{value:"\ud83c\udfa8 UI Components",id:"-ui-components",level:2},{value:"Permission-Aware Components",id:"permission-aware-components",level:3},{value:"Permission Toggle Component",id:"permission-toggle-component",level:3},{value:"\ud83d\udd04 Permission Synchronization",id:"-permission-synchronization",level:2},{value:"Real-Time Updates",id:"real-time-updates",level:3},{value:"Permission Caching",id:"permission-caching",level:3},{value:"\ud83e\uddea Testing Permissions",id:"-testing-permissions",level:2},{value:"Unit Testing",id:"unit-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"\ud83d\udd0d Debugging Permissions",id:"-debugging-permissions",level:2},{value:"Permission Debugging Tools",id:"permission-debugging-tools",level:3},{value:"Console Logging",id:"console-logging",level:3},{value:"\ud83d\udcca Permission Analytics",id:"-permission-analytics",level:2},{value:"Permission Usage Tracking",id:"permission-usage-tracking",level:3},{value:"Permission Reports",id:"permission-reports",level:3},{value:"\ud83d\udd10 Security Best Practices",id:"-security-best-practices",level:2},{value:"1. Server-Side Validation",id:"1-server-side-validation",level:3},{value:"2. Principle of Least Privilege",id:"2-principle-of-least-privilege",level:3},{value:"3. Regular Permission Audits",id:"3-regular-permission-audits",level:3},{value:"\ud83d\udcda Related Documentation",id:"-related-documentation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"permission-management",children:"Permission Management"})}),"\n",(0,r.jsx)(n.p,{children:"ABP React implements a comprehensive permission system that integrates with the ABP Framework's authorization capabilities. This system provides fine-grained control over user access to features, pages, and data throughout the application."}),"\n",(0,r.jsx)(n.h2,{id:"-permission-system-overview",children:"\ud83d\udd10 Permission System Overview"}),"\n",(0,r.jsx)(n.h3,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.p,{children:"The permission system in ABP React is built on these fundamental concepts:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Permissions"}),": Granular access rights (e.g., ",(0,r.jsx)(n.code,{children:"UserManagement.Create"}),", ",(0,r.jsx)(n.code,{children:"RoleManagement.Delete"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Roles"}),": Collections of permissions assigned to users"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Policies"}),": Named permission groups for easier management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Providers"}),": Sources of permission definitions (ABP backend)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"permission-hierarchy",children:"Permission Hierarchy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Application                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502   Roles     \u2502  \u2502 Permissions \u2502  \u2502  Policies   \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502   Users     \u2502  \u2502   Groups    \u2502  \u2502  Tenants    \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-permission-types",children:"\ud83c\udfaf Permission Types"}),"\n",(0,r.jsx)(n.h3,{id:"1-feature-permissions",children:"1. Feature Permissions"}),"\n",(0,r.jsx)(n.p,{children:"Control access to application features:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Feature permission examples\nconst featurePermissions = {\n  UserManagement: 'UserManagement',\n  RoleManagement: 'RoleManagement',\n  TenantManagement: 'TenantManagement',\n  AuditLogging: 'AuditLogging',\n  FeatureManagement: 'FeatureManagement',\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-crud-permissions",children:"2. CRUD Permissions"}),"\n",(0,r.jsx)(n.p,{children:"Standard Create, Read, Update, Delete permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// CRUD permission examples\nconst crudPermissions = {\n  Create: 'Create',\n  Read: 'Read',\n  Update: 'Update',\n  Delete: 'Delete',\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-custom-permissions",children:"3. Custom Permissions"}),"\n",(0,r.jsx)(n.p,{children:"Application-specific permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Custom permission examples\nconst customPermissions = {\n  ExportData: 'ExportData',\n  ImportData: 'ImportData',\n  ApproveRequests: 'ApproveRequests',\n  ViewReports: 'ViewReports',\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-permission-implementation",children:"\ud83c\udfd7\ufe0f Permission Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"1-permission-definition",children:"1. Permission Definition"}),"\n",(0,r.jsx)(n.p,{children:"Permissions are defined in the ABP backend and consumed by the React frontend:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Backend permission definition (C#)\npublic class UserManagementPermissions\n{\n    public const string GroupName = "UserManagement";\n    \n    public const string Create = GroupName + ".Create";\n    public const string Read = GroupName + ".Read";\n    public const string Update = GroupName + ".Update";\n    public const string Delete = GroupName + ".Delete";\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-frontend-permission-usage",children:"2. Frontend Permission Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Using permissions in React components\nimport { usePermission } from '@/hooks/usePermission';\n\nconst UserList: React.FC = () => {\n  const canCreate = usePermission('UserManagement.Create');\n  const canDelete = usePermission('UserManagement.Delete');\n\n  return (\n    <div>\n      {canCreate && (\n        <Button onClick={handleCreate}>Create User</Button>\n      )}\n      \n      {users.map(user => (\n        <UserCard \n          key={user.id} \n          user={user}\n          showDeleteButton={canDelete}\n        />\n      ))}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-permission-hooks",children:"\ud83d\udd27 Permission Hooks"}),"\n",(0,r.jsx)(n.h3,{id:"usepermission-hook",children:"usePermission Hook"}),"\n",(0,r.jsx)(n.p,{children:"The primary hook for checking permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { usePermission } from '@/hooks/usePermission';\n\nconst MyComponent: React.FC = () => {\n  const canEdit = usePermission('UserManagement.Update');\n  const canDelete = usePermission('UserManagement.Delete');\n\n  if (!canEdit && !canDelete) {\n    return <div>No permissions available</div>;\n  }\n\n  return (\n    <div>\n      {canEdit && <EditButton />}\n      {canDelete && <DeleteButton />}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"usepermissions-hook",children:"usePermissions Hook"}),"\n",(0,r.jsx)(n.p,{children:"Check multiple permissions at once:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { usePermissions } from '@/hooks/usePermissions';\n\nconst AdminPanel: React.FC = () => {\n  const permissions = usePermissions([\n    'UserManagement.Create',\n    'UserManagement.Read',\n    'UserManagement.Update',\n    'UserManagement.Delete',\n    'RoleManagement.Create',\n    'RoleManagement.Read',\n  ]);\n\n  return (\n    <div>\n      {permissions['UserManagement.Create'] && <CreateUserButton />}\n      {permissions['RoleManagement.Create'] && <CreateRoleButton />}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-route-protection",children:"\ud83d\udee1\ufe0f Route Protection"}),"\n",(0,r.jsx)(n.h3,{id:"protected-routes",children:"Protected Routes"}),"\n",(0,r.jsx)(n.p,{children:"Protect entire pages or sections based on permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Route protection component\nimport { ProtectedRoute } from '@/components/auth/ProtectedRoute';\n\nconst AdminLayout: React.FC = () => {\n  return (\n    <ProtectedRoute \n      requiredPermissions={['AdminAccess']}\n      fallback={<AccessDenied />}\n    >\n      <AdminDashboard />\n    </ProtectedRoute>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"conditional-navigation",children:"Conditional Navigation"}),"\n",(0,r.jsx)(n.p,{children:"Show/hide navigation items based on permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const Navigation: React.FC = () => {\n  const canManageUsers = usePermission(\'UserManagement.Read\');\n  const canManageRoles = usePermission(\'RoleManagement.Read\');\n\n  return (\n    <nav>\n      <Link to="/dashboard">Dashboard</Link>\n      \n      {canManageUsers && (\n        <Link to="/admin/users">Users</Link>\n      )}\n      \n      {canManageRoles && (\n        <Link to="/admin/roles">Roles</Link>\n      )}\n    </nav>\n  );\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-ui-components",children:"\ud83c\udfa8 UI Components"}),"\n",(0,r.jsx)(n.h3,{id:"permission-aware-components",children:"Permission-Aware Components"}),"\n",(0,r.jsx)(n.p,{children:"Components that automatically handle permission checks:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Permission-aware button component\ninterface PermissionButtonProps {\n  permission: string;\n  children: React.ReactNode;\n  onClick: () => void;\n  disabled?: boolean;\n}\n\nconst PermissionButton: React.FC<PermissionButtonProps> = ({\n  permission,\n  children,\n  onClick,\n  disabled = false,\n}) => {\n  const hasPermission = usePermission(permission);\n\n  if (!hasPermission) {\n    return null;\n  }\n\n  return (\n    <Button onClick={onClick} disabled={disabled}>\n      {children}\n    </Button>\n  );\n};\n\n// Usage\n<PermissionButton \n  permission="UserManagement.Create"\n  onClick={handleCreateUser}\n>\n  Create User\n</PermissionButton>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"permission-toggle-component",children:"Permission Toggle Component"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission toggle for role management\ninterface PermissionToggleProps {\n  permission: string;\n  roleId: string;\n  onToggle: (permission: string, granted: boolean) => void;\n}\n\nconst PermissionToggle: React.FC<PermissionToggleProps> = ({\n  permission,\n  roleId,\n  onToggle,\n}) => {\n  const [isGranted, setIsGranted] = useState(false);\n  const canManagePermissions = usePermission('RoleManagement.Update');\n\n  const handleToggle = () => {\n    if (!canManagePermissions) return;\n    \n    const newValue = !isGranted;\n    setIsGranted(newValue);\n    onToggle(permission, newValue);\n  };\n\n  return (\n    <Switch\n      checked={isGranted}\n      onChange={handleToggle}\n      disabled={!canManagePermissions}\n    />\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-permission-synchronization",children:"\ud83d\udd04 Permission Synchronization"}),"\n",(0,r.jsx)(n.h3,{id:"real-time-updates",children:"Real-Time Updates"}),"\n",(0,r.jsx)(n.p,{children:"Permissions are synchronized with the ABP backend:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission synchronization hook\nimport { usePermissionSync } from '@/hooks/usePermissionSync';\n\nconst App: React.FC = () => {\n  // Sync permissions on app start and user changes\n  usePermissionSync();\n\n  return <Router />;\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"permission-caching",children:"Permission Caching"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission cache management\nimport { usePermissionCache } from '@/hooks/usePermissionCache';\n\nconst PermissionManager: React.FC = () => {\n  const { cache, invalidateCache, refreshCache } = usePermissionCache();\n\n  const handlePermissionUpdate = async () => {\n    // Update permissions in backend\n    await updatePermissions(newPermissions);\n    \n    // Invalidate local cache\n    invalidateCache();\n    \n    // Refresh from server\n    await refreshCache();\n  };\n\n  return (\n    <div>\n      {/* Permission management UI */}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-testing-permissions",children:"\ud83e\uddea Testing Permissions"}),"\n",(0,r.jsx)(n.h3,{id:"unit-testing",children:"Unit Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Testing permission hooks\nimport { renderHook } from '@testing-library/react';\nimport { usePermission } from '@/hooks/usePermission';\n\ndescribe('usePermission', () => {\n  it('should return true for granted permissions', () => {\n    const { result } = renderHook(() => \n      usePermission('UserManagement.Create')\n    );\n    \n    expect(result.current).toBe(true);\n  });\n\n  it('should return false for denied permissions', () => {\n    const { result } = renderHook(() => \n      usePermission('AdminAccess')\n    );\n    \n    expect(result.current).toBe(false);\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Testing permission-aware components\nimport { render, screen } from '@testing-library/react';\nimport { PermissionButton } from '@/components/PermissionButton';\n\ndescribe('PermissionButton', () => {\n  it('should render when user has permission', () => {\n    render(\n      <PermissionButton \n        permission=\"UserManagement.Create\"\n        onClick={jest.fn()}\n      >\n        Create User\n      </PermissionButton>\n    );\n    \n    expect(screen.getByText('Create User')).toBeInTheDocument();\n  });\n\n  it('should not render when user lacks permission', () => {\n    render(\n      <PermissionButton \n        permission=\"AdminAccess\"\n        onClick={jest.fn()}\n      >\n        Admin Action\n      </PermissionButton>\n    );\n    \n    expect(screen.queryByText('Admin Action')).not.toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-debugging-permissions",children:"\ud83d\udd0d Debugging Permissions"}),"\n",(0,r.jsx)(n.h3,{id:"permission-debugging-tools",children:"Permission Debugging Tools"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission debugging component\nconst PermissionDebugger: React.FC = () => {\n  const { permissions, user, roles } = usePermissionContext();\n\n  return (\n    <details>\n      <summary>Permission Debug Info</summary>\n      <pre>\n        {JSON.stringify({ permissions, user, roles }, null, 2)}\n      </pre>\n    </details>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"console-logging",children:"Console Logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Debug permission checks\nconst usePermissionDebug = (permission: string) => {\n  const hasPermission = usePermission(permission);\n  \n  useEffect(() => {\n    console.log(`Permission check: ${permission} = ${hasPermission}`);\n  }, [permission, hasPermission]);\n  \n  return hasPermission;\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-permission-analytics",children:"\ud83d\udcca Permission Analytics"}),"\n",(0,r.jsx)(n.h3,{id:"permission-usage-tracking",children:"Permission Usage Tracking"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Track permission usage\nconst usePermissionAnalytics = () => {\n  const trackPermissionCheck = (permission: string, granted: boolean) => {\n    analytics.track('permission_check', {\n      permission,\n      granted,\n      timestamp: new Date().toISOString(),\n    });\n  };\n\n  return { trackPermissionCheck };\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"permission-reports",children:"Permission Reports"}),"\n",(0,r.jsx)(n.p,{children:"Generate reports on permission usage and access patterns:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission reporting\nconst PermissionReport: React.FC = () => {\n  const [report, setReport] = useState(null);\n\n  const generateReport = async () => {\n    const data = await fetchPermissionReport();\n    setReport(data);\n  };\n\n  return (\n    <div>\n      <Button onClick={generateReport}>Generate Report</Button>\n      {report && (\n        <PermissionReportTable data={report} />\n      )}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-security-best-practices",children:"\ud83d\udd10 Security Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-server-side-validation",children:"1. Server-Side Validation"}),"\n",(0,r.jsx)(n.p,{children:"Always validate permissions on the server side:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Client-side check (for UI only)\nconst canDelete = usePermission('UserManagement.Delete');\n\n// Server-side validation (required)\nconst handleDelete = async (userId: string) => {\n  try {\n    await api.delete(`/users/${userId}`);\n    // Success\n  } catch (error) {\n    if (error.status === 403) {\n      // Permission denied\n      showError('You do not have permission to delete users');\n    }\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-principle-of-least-privilege",children:"2. Principle of Least Privilege"}),"\n",(0,r.jsx)(n.p,{children:"Grant only the minimum permissions necessary:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Good: Specific permissions\nconst canEditUser = usePermission('UserManagement.Update');\n\n// Avoid: Broad permissions\nconst isAdmin = usePermission('AdminAccess');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-regular-permission-audits",children:"3. Regular Permission Audits"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Permission audit utility\nconst auditPermissions = async () => {\n  const audit = await api.get('/permissions/audit');\n  \n  // Check for unused permissions\n  const unusedPermissions = audit.permissions.filter(\n    p => p.usageCount === 0\n  );\n  \n  // Check for overly broad permissions\n  const broadPermissions = audit.permissions.filter(\n    p => p.grantedToUsers > threshold\n  );\n  \n  return { unusedPermissions, broadPermissions };\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-related-documentation",children:"\ud83d\udcda Related Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/fundamentals/authentication",children:"Authentication"})})," - User authentication system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/fundamentals/admin-interface",children:"Admin Interface"})})," - Admin panel permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/components/role-management",children:"Role Management"})})," - Managing user roles"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/fundamentals/api-integration",children:"API Integration"})})," - Permission-aware API calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/development/testing",children:"Testing Guide"})})," - Testing permission logic"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"The permission system in ABP React provides comprehensive access control while maintaining flexibility and ease of use. By following the patterns and best practices outlined in this guide, you can build secure, permission-aware applications that protect sensitive data and functionality."})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
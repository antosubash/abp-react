"use strict";(self.webpackChunkabp_react=self.webpackChunkabp_react||[]).push([[8485],{8356:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"fundamentals/middleware","title":"Middleware","description":"Overview","source":"@site/docs/fundamentals/middleware.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/middleware","permalink":"/abp-react/docs/fundamentals/middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/antosubash/abp-react/tree/main/docs/docs/fundamentals/middleware.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Authentication System","permalink":"/abp-react/docs/fundamentals/authentication"},"next":{"title":"Session Management","permalink":"/abp-react/docs/fundamentals/session-management"}}');var t=i(4848),r=i(8453);const l={sidebar_position:2},a="Middleware",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Core Functionality",id:"core-functionality",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Tenant Resolution Middleware",id:"tenant-resolution-middleware",level:3},{value:"Session Data Structure",id:"session-data-structure",level:3},{value:"Tenant Resolution Process",id:"tenant-resolution-process",level:2},{value:"API Integration",id:"api-integration",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Extending Middleware",id:"extending-middleware",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"middleware",children:"Middleware"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"ABP React implements a middleware system that handles critical aspects of the application's request pipeline, particularly focusing on tenant resolution and session management. The middleware runs on every request and ensures proper tenant context and session state."}),"\n",(0,t.jsx)(n.h2,{id:"core-functionality",children:"Core Functionality"}),"\n",(0,t.jsx)(n.p,{children:"The middleware system provides the following key features:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Tenant Resolution"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automatically detects and resolves tenant context from the host header"}),"\n",(0,t.jsx)(n.li,{children:"Maintains tenant information in the session"}),"\n",(0,t.jsx)(n.li,{children:"Redirects to tenant setup if tenant context is missing"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Session Management"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Integrates with iron-session for secure session handling"}),"\n",(0,t.jsx)(n.li,{children:"Manages authentication state"}),"\n",(0,t.jsx)(n.li,{children:"Handles tenant-specific session data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(n.h3,{id:"tenant-resolution-middleware",children:"Tenant Resolution Middleware"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export async function middleware(request: NextRequest): Promise<NextResponse | undefined> {\n  const session = await getIronSession<SessionData>(await cookies(), sessionOptions)\n\n  // Check if tenantId is present in the session\n  if (!session.tenantId && request.nextUrl.pathname !== '/auth/set-tenant') {\n    // Redirect to set-tenant page if tenantId is not present\n    let redirectUrl = new URL('/auth/set-tenant', request.nextUrl.origin)\n    // Validate the redirect URL\n    if (redirectUrl.origin === request.nextUrl.origin) {\n      return NextResponse.redirect(redirectUrl)\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"session-data-structure",children:"Session Data Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface SessionData {\n  isLoggedIn: boolean\n  access_token?: string\n  code_verifier?: string\n  state?: string\n  userInfo?: {\n    sub: string\n    name: string\n    email: string\n    email_verified: boolean\n  }\n  tenantId?: string\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tenant-resolution-process",children:"Tenant Resolution Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Initial Request"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Middleware checks for tenant ID in session"}),"\n",(0,t.jsxs)(n.li,{children:["If missing, redirects to ",(0,t.jsx)(n.code,{children:"/auth/set-tenant"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Tenant Setup"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fetches tenant GUID based on host header"}),"\n",(0,t.jsx)(n.li,{children:"Stores tenant ID in session"}),"\n",(0,t.jsx)(n.li,{children:"Redirects back to original request"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Subsequent Requests"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Includes tenant ID in API requests"}),"\n",(0,t.jsx)(n.li,{children:"Maintains tenant context throughout the session"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-integration",children:"API Integration"}),"\n",(0,t.jsx)(n.p,{children:"The middleware ensures proper tenant context in API requests:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"APIClient.interceptors.request.use(async (options) => {\n  const session = await getSession()\n  options.headers.set('Authorization', `Bearer ${session.access_token}`)\n  options.headers.set('__tenant', session.tenantId ?? '')\n  return options\n})\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Security"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always validate redirect URLs"}),"\n",(0,t.jsx)(n.li,{children:"Use secure session storage"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Minimize middleware operations"}),"\n",(0,t.jsx)(n.li,{children:"Cache tenant information when possible"}),"\n",(0,t.jsx)(n.li,{children:"Handle edge cases gracefully"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Maintenance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep middleware logic simple and focused"}),"\n",(0,t.jsx)(n.li,{children:"Document tenant resolution process"}),"\n",(0,t.jsx)(n.li,{children:"Monitor middleware performance"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The middleware can be configured through environment variables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NEXT_PUBLIC_API_URL"}),": API endpoint for tenant resolution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SESSION_PASSWORD"}),": Secret key for session encryption"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NEXT_PUBLIC_APP_URL"}),": Application base URL"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"The middleware implements robust error handling:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Tenant Resolution Failures"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Falls back to default tenant"}),"\n",(0,t.jsx)(n.li,{children:"Logs resolution errors"}),"\n",(0,t.jsx)(n.li,{children:"Maintains application stability"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Session Errors"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Handles session corruption"}),"\n",(0,t.jsx)(n.li,{children:"Provides graceful degradation"}),"\n",(0,t.jsx)(n.li,{children:"Maintains user experience"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"extending-middleware",children:"Extending Middleware"}),"\n",(0,t.jsx)(n.p,{children:"To extend the middleware functionality:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create new middleware functions"}),"\n",(0,t.jsx)(n.li,{children:"Register them in the middleware chain"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling"}),"\n",(0,t.jsx)(n.li,{children:"Test thoroughly with different scenarios"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/fundamentals/authentication",children:"Authentication"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/fundamentals/session-management",children:"Session Management"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/fundamentals/multi-tenancy",children:"Multi-tenancy"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkabp_react=self.webpackChunkabp_react||[]).push([[4733],{6731:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tutorials/deployment","title":"Deployment Guide","description":"This comprehensive guide covers deploying your ABP React application to various hosting platforms, from development to production environments.","source":"@site/docs/tutorials/deployment.md","sourceDirName":"tutorials","slug":"/tutorials/deployment","permalink":"/abp-react/docs/tutorials/deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/antosubash/abp-react/tree/main/docs/docs/tutorials/deployment.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Create a Page","permalink":"/abp-react/docs/tutorials/create-a-page"},"next":{"title":"CMS Tutorials","permalink":"/abp-react/docs/tutorials/cms-tutorials"}}');var i=s(4848),o=s(8453);const a={sidebar_position:3},t="Deployment Guide",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Pre-Deployment Checklist",id:"pre-deployment-checklist",level:2},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Production Environment Variables",id:"production-environment-variables",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Vercel Deployment",id:"vercel-deployment",level:2},{value:"Setup Process",id:"setup-process",level:3},{value:"Advanced Vercel Configuration",id:"advanced-vercel-configuration",level:3},{value:"Docker Deployment",id:"docker-deployment",level:2},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Build and Run",id:"build-and-run",level:3},{value:"AWS Deployment",id:"aws-deployment",level:2},{value:"EC2 Deployment",id:"ec2-deployment",level:3},{value:"ECS with Fargate",id:"ecs-with-fargate",level:3},{value:"Azure Deployment",id:"azure-deployment",level:2},{value:"Azure Container Instances",id:"azure-container-instances",level:3},{value:"Azure App Service",id:"azure-app-service",level:3},{value:"Nginx Configuration",id:"nginx-configuration",level:2},{value:"Nginx Configuration File",id:"nginx-configuration-file",level:3},{value:"Database and Redis Setup",id:"database-and-redis-setup",level:2},{value:"PostgreSQL Setup",id:"postgresql-setup",level:3},{value:"Redis Setup",id:"redis-setup",level:3},{value:"SSL/TLS Configuration",id:"ssltls-configuration",level:2},{value:"Let&#39;s Encrypt with Certbot",id:"lets-encrypt-with-certbot",level:3},{value:"Custom SSL Certificate",id:"custom-ssl-certificate",level:3},{value:"Monitoring and Logging",id:"monitoring-and-logging",level:2},{value:"Application Monitoring",id:"application-monitoring",level:3},{value:"Health Check Endpoint",id:"health-check-endpoint",level:3},{value:"Backup and Recovery",id:"backup-and-recovery",level:2},{value:"Automated Backups",id:"automated-backups",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Production Optimizations",id:"production-optimizations",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Deployment Issues",id:"common-deployment-issues",level:3},{value:"Debug Commands",id:"debug-commands",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"deployment-guide",children:"Deployment Guide"})}),"\n",(0,i.jsx)(n.p,{children:"This comprehensive guide covers deploying your ABP React application to various hosting platforms, from development to production environments."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"ABP React can be deployed to multiple platforms:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vercel"})," - Recommended for Next.js applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Netlify"})," - Great for static deployments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker"})," - Containerized deployments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AWS"})," - Amazon Web Services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Azure"})," - Microsoft cloud platform"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traditional Hosting"})," - VPS or dedicated servers"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pre-deployment-checklist",children:"Pre-Deployment Checklist"}),"\n",(0,i.jsx)(n.p,{children:"Before deploying, ensure you have:"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Environment Variables"}),": All required environment variables configured"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Build Success"}),": Application builds without errors locally"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"API Configuration"}),": Backend API is accessible and configured"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Authentication"}),": OpenID Connect configuration is correct"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Database"}),": Database connections are properly configured"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Redis"}),": Session storage is configured (if using Redis)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"SSL Certificates"}),": HTTPS is properly configured for production"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"production-environment-variables",children:"Production Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Create a production environment configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:"# Application URLs\nNEXT_PUBLIC_APP_URL=https://your-domain.com\nNEXT_PUBLIC_API_URL=https://your-api.your-domain.com\n\n# OpenID Connect Configuration\nNEXT_PUBLIC_CLIENT_ID=your-production-client-id\nNEXT_PUBLIC_SCOPE=openid profile email phone roles\n\n# Session Security\nSESSION_PASSWORD=your-very-secure-production-password-with-at-least-32-characters\n\n# Redis Configuration (Production)\nREDIS_HOST=your-redis-host.com\nREDIS_PORT=6379\nREDIS_PASSWORD=your-secure-redis-password\n\n# Database (if needed)\nDATABASE_URL=postgresql://user:password@host:port/database\n\n# Email Configuration\nSMTP_HOST=your-smtp-host.com\nSMTP_PORT=587\nSMTP_USER=your-smtp-user\nSMTP_PASSWORD=your-smtp-password\n\n# Feature Flags\nNEXT_PUBLIC_ENABLE_ANALYTICS=true\nNEXT_PUBLIC_ENABLE_MULTI_TENANCY=true\n"})}),"\n",(0,i.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Session Password"}),": Use a strong, unique password for session encryption"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Keys"}),": Never expose API keys in client-side code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HTTPS"}),": Always use HTTPS in production"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CORS"}),": Configure CORS properly on your API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CSP"}),": Implement Content Security Policy headers"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"vercel-deployment",children:"Vercel Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Vercel is the recommended platform for Next.js applications."}),"\n",(0,i.jsx)(n.h3,{id:"setup-process",children:"Setup Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Connect Repository"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Vercel CLI\nnpm i -g vercel\n\n# Login to Vercel\nvercel login\n\n# Deploy from your project directory\nvercel\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Configure Environment Variables"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In your Vercel dashboard:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Go to Project Settings \u2192 Environment Variables"}),"\n",(0,i.jsx)(n.li,{children:"Add all required environment variables"}),"\n",(0,i.jsx)(n.li,{children:"Set appropriate environments (Production, Preview, Development)"}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Build Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Vercel automatically detects Next.js and uses optimal build settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// vercel.json (optional customization)\n{\n  "buildCommand": "pnpm build",\n  "outputDirectory": ".next",\n  "installCommand": "pnpm install",\n  "framework": "nextjs",\n  "regions": ["iad1"],\n  "functions": {\n    "app/api/**": {\n      "maxDuration": 30\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Custom Domain"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Add custom domain\nvercel domains add your-domain.com\n\n# Configure DNS\n# Add CNAME record: your-domain.com \u2192 cname.vercel-dns.com\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-vercel-configuration",children:"Advanced Vercel Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// next.config.mjs\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  // Enable compression\n  compress: true,\n  \n  // Optimize images\n  images: {\n    domains: ['your-api-domain.com'],\n    formats: ['image/webp', 'image/avif'],\n  },\n  \n  // Security headers\n  async headers() {\n    return [\n      {\n        source: '/(.*)',\n        headers: [\n          {\n            key: 'X-Frame-Options',\n            value: 'DENY',\n          },\n          {\n            key: 'X-Content-Type-Options',\n            value: 'nosniff',\n          },\n          {\n            key: 'Referrer-Policy',\n            value: 'origin-when-cross-origin',\n          },\n        ],\n      },\n    ]\n  },\n}\n\nexport default nextConfig\n"})}),"\n",(0,i.jsx)(n.h2,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Containerize your application for consistent deployments across environments."}),"\n",(0,i.jsx)(n.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",children:'# Multi-stage build for production\nFROM node:18-alpine AS base\n\n# Install dependencies only when needed\nFROM base AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\n# Install dependencies based on the preferred package manager\nCOPY package.json pnpm-lock.yaml* ./\nRUN corepack enable pnpm && pnpm i --frozen-lockfile\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Build the application\nENV NEXT_TELEMETRY_DISABLED 1\nRUN corepack enable pnpm && pnpm run build\n\n# Production image, copy all the files and run next\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_ENV production\nENV NEXT_TELEMETRY_DISABLED 1\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\nCOPY --from=builder /app/public ./public\n\n# Set the correct permission for prerender cache\nRUN mkdir .next\nRUN chown nextjs:nodejs .next\n\n# Automatically leverage output traces to reduce image size\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\n\nUSER nextjs\n\nEXPOSE 3000\n\nENV PORT 3000\nENV HOSTNAME "0.0.0.0"\n\nCMD ["node", "server.js"]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - "3000:3000"\n    environment:\n      - NODE_ENV=production\n      - NEXT_PUBLIC_APP_URL=http://localhost:3000\n      - NEXT_PUBLIC_API_URL=http://api:5000\n      - SESSION_PASSWORD=your-session-password\n      - REDIS_HOST=redis\n    depends_on:\n      - redis\n    networks:\n      - app-network\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - "6379:6379"\n    command: redis-server --requirepass your-redis-password\n    networks:\n      - app-network\n\n  nginx:\n    image: nginx:alpine\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/nginx/ssl\n    depends_on:\n      - app\n    networks:\n      - app-network\n\nnetworks:\n  app-network:\n    driver: bridge\n'})}),"\n",(0,i.jsx)(n.h3,{id:"build-and-run",children:"Build and Run"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Build the Docker image\ndocker build -t abp-react .\n\n# Run with docker-compose\ndocker-compose up -d\n\n# Or run standalone\ndocker run -p 3000:3000 \\\n  -e NEXT_PUBLIC_APP_URL=https://your-domain.com \\\n  -e NEXT_PUBLIC_API_URL=https://api.your-domain.com \\\n  -e SESSION_PASSWORD=your-session-password \\\n  abp-react\n"})}),"\n",(0,i.jsx)(n.h2,{id:"aws-deployment",children:"AWS Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Deploy to Amazon Web Services for scalable, enterprise-grade hosting."}),"\n",(0,i.jsx)(n.h3,{id:"ec2-deployment",children:"EC2 Deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Launch EC2 Instance"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Connect to your EC2 instance\nssh -i your-key.pem ec2-user@your-ec2-ip\n\n# Install Node.js and pnpm\ncurl -fsSL https://fnm.vercel.app/install | bash\nsource ~/.bashrc\nfnm install 18\nfnm use 18\nnpm install -g pnpm\n\n# Install PM2 for process management\nnpm install -g pm2\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Deploy Application"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clone your repository\ngit clone https://github.com/your-username/your-repo.git\ncd your-repo\n\n# Install dependencies and build\npnpm install\npnpm build\n\n# Start with PM2\npm2 start ecosystem.config.js\npm2 save\npm2 startup\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"PM2 Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// ecosystem.config.js\nmodule.exports = {\n  apps: [\n    {\n      name: 'abp-react',\n      script: 'node_modules/.bin/next',\n      args: 'start',\n      cwd: './',\n      instances: 'max',\n      exec_mode: 'cluster',\n      env: {\n        NODE_ENV: 'production',\n        PORT: 3000,\n      },\n    },\n  ],\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ecs-with-fargate",children:"ECS with Fargate"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create ECS Task Definition"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "family": "abp-react",\n  "networkMode": "awsvpc",\n  "requiresCompatibilities": ["FARGATE"],\n  "cpu": "256",\n  "memory": "512",\n  "executionRoleArn": "arn:aws:iam::account:role/ecsTaskExecutionRole",\n  "containerDefinitions": [\n    {\n      "name": "abp-react",\n      "image": "your-account.dkr.ecr.region.amazonaws.com/abp-react:latest",\n      "portMappings": [\n        {\n          "containerPort": 3000,\n          "protocol": "tcp"\n        }\n      ],\n      "environment": [\n        {\n          "name": "NODE_ENV",\n          "value": "production"\n        }\n      ],\n      "secrets": [\n        {\n          "name": "SESSION_PASSWORD",\n          "valueFrom": "arn:aws:secretsmanager:region:account:secret:abp-react-secrets"\n        }\n      ],\n      "logConfiguration": {\n        "logDriver": "awslogs",\n        "options": {\n          "awslogs-group": "/ecs/abp-react",\n          "awslogs-region": "us-east-1",\n          "awslogs-stream-prefix": "ecs"\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Deploy with AWS CLI"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Build and push Docker image to ECR\naws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin your-account.dkr.ecr.us-east-1.amazonaws.com\n\ndocker build -t abp-react .\ndocker tag abp-react:latest your-account.dkr.ecr.us-east-1.amazonaws.com/abp-react:latest\ndocker push your-account.dkr.ecr.us-east-1.amazonaws.com/abp-react:latest\n\n# Create ECS service\naws ecs create-service \\\n  --cluster your-cluster \\\n  --service-name abp-react \\\n  --task-definition abp-react:1 \\\n  --desired-count 2 \\\n  --launch-type FARGATE \\\n  --network-configuration "awsvpcConfiguration={subnets=[subnet-12345],securityGroups=[sg-12345],assignPublicIp=ENABLED}"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"azure-deployment",children:"Azure Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Deploy to Microsoft Azure for enterprise-level cloud hosting."}),"\n",(0,i.jsx)(n.h3,{id:"azure-container-instances",children:"Azure Container Instances"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Login to Azure\naz login\n\n# Create resource group\naz group create --name abp-react-rg --location eastus\n\n# Create container instance\naz container create \\\n  --resource-group abp-react-rg \\\n  --name abp-react-app \\\n  --image your-registry.azurecr.io/abp-react:latest \\\n  --dns-name-label abp-react-unique \\\n  --ports 3000 \\\n  --environment-variables \\\n    NODE_ENV=production \\\n    NEXT_PUBLIC_APP_URL=https://abp-react-unique.eastus.azurecontainer.io \\\n  --secure-environment-variables \\\n    SESSION_PASSWORD=your-session-password\n"})}),"\n",(0,i.jsx)(n.h3,{id:"azure-app-service",children:"Azure App Service"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create App Service"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create App Service plan\naz appservice plan create \\\n  --name abp-react-plan \\\n  --resource-group abp-react-rg \\\n  --sku B1 \\\n  --is-linux\n\n# Create web app\naz webapp create \\\n  --resource-group abp-react-rg \\\n  --plan abp-react-plan \\\n  --name abp-react-app \\\n  --deployment-container-image-name your-registry.azurecr.io/abp-react:latest\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Configure Environment Variables"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"az webapp config appsettings set \\\n  --resource-group abp-react-rg \\\n  --name abp-react-app \\\n  --settings \\\n    NODE_ENV=production \\\n    NEXT_PUBLIC_APP_URL=https://abp-react-app.azurewebsites.net \\\n    SESSION_PASSWORD=your-session-password\n"})}),"\n",(0,i.jsx)(n.h2,{id:"nginx-configuration",children:"Nginx Configuration"}),"\n",(0,i.jsx)(n.p,{children:"For traditional hosting or reverse proxy setups."}),"\n",(0,i.jsx)(n.h3,{id:"nginx-configuration-file",children:"Nginx Configuration File"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-nginx",children:'# /etc/nginx/sites-available/abp-react\nserver {\n    listen 80;\n    server_name your-domain.com www.your-domain.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name your-domain.com www.your-domain.com;\n\n    # SSL Configuration\n    ssl_certificate /etc/nginx/ssl/your-domain.crt;\n    ssl_certificate_key /etc/nginx/ssl/your-domain.key;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;\n    ssl_prefer_server_ciphers off;\n\n    # Security Headers\n    add_header X-Frame-Options "SAMEORIGIN" always;\n    add_header X-XSS-Protection "1; mode=block" always;\n    add_header X-Content-Type-Options "nosniff" always;\n    add_header Referrer-Policy "no-referrer-when-downgrade" always;\n    add_header Content-Security-Policy "default-src \'self\' http: https: data: blob: \'unsafe-inline\'" always;\n\n    # Gzip Compression\n    gzip on;\n    gzip_vary on;\n    gzip_min_length 1024;\n    gzip_proxied expired no-cache no-store private must-revalidate auth;\n    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;\n\n    # Proxy to Next.js application\n    location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \'upgrade\';\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_cache_bypass $http_upgrade;\n        proxy_read_timeout 300s;\n        proxy_connect_timeout 75s;\n    }\n\n    # Cache static assets\n    location /_next/static {\n        alias /path/to/your/app/.next/static;\n        add_header Cache-Control "public, max-age=31536000, immutable";\n    }\n\n    # Handle API routes\n    location /api/ {\n        proxy_pass http://localhost:3000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"database-and-redis-setup",children:"Database and Redis Setup"}),"\n",(0,i.jsx)(n.h3,{id:"postgresql-setup",children:"PostgreSQL Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install PostgreSQL\nsudo apt update\nsudo apt install postgresql postgresql-contrib\n\n# Create database and user\nsudo -u postgres psql\nCREATE DATABASE abp_react_prod;\nCREATE USER abp_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE abp_react_prod TO abp_user;\n\\q\n"})}),"\n",(0,i.jsx)(n.h3,{id:"redis-setup",children:"Redis Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Redis\nsudo apt update\nsudo apt install redis-server\n\n# Configure Redis\nsudo nano /etc/redis/redis.conf\n# Set: requirepass your_secure_password\n# Set: bind 127.0.0.1 your_server_ip\n\n# Restart Redis\nsudo systemctl restart redis\nsudo systemctl enable redis\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ssltls-configuration",children:"SSL/TLS Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"lets-encrypt-with-certbot",children:"Let's Encrypt with Certbot"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Certbot\nsudo apt install certbot python3-certbot-nginx\n\n# Obtain SSL certificate\nsudo certbot --nginx -d your-domain.com -d www.your-domain.com\n\n# Test automatic renewal\nsudo certbot renew --dry-run\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-ssl-certificate",children:"Custom SSL Certificate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create SSL directory\nsudo mkdir -p /etc/nginx/ssl\n\n# Copy your certificate files\nsudo cp your-domain.crt /etc/nginx/ssl/\nsudo cp your-domain.key /etc/nginx/ssl/\n\n# Set proper permissions\nsudo chmod 600 /etc/nginx/ssl/your-domain.key\nsudo chmod 644 /etc/nginx/ssl/your-domain.crt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-and-logging",children:"Monitoring and Logging"}),"\n",(0,i.jsx)(n.h3,{id:"application-monitoring",children:"Application Monitoring"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// monitoring.js\nimport { performance } from 'perf_hooks'\n\nexport const logPerformance = (name, start) => {\n  const duration = performance.now() - start\n  console.log(`${name}: ${duration}ms`)\n  \n  // Send to monitoring service\n  if (process.env.MONITORING_ENDPOINT) {\n    fetch(process.env.MONITORING_ENDPOINT, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ metric: name, duration, timestamp: Date.now() })\n    })\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"health-check-endpoint",children:"Health Check Endpoint"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// app/api/health/route.ts\nexport async function GET() {\n  try {\n    // Check database connectivity\n    // Check Redis connectivity\n    // Check external services\n    \n    return Response.json({ \n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version \n    })\n  } catch (error) {\n    return Response.json(\n      { status: 'unhealthy', error: error.message },\n      { status: 500 }\n    )\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"backup-and-recovery",children:"Backup and Recovery"}),"\n",(0,i.jsx)(n.h3,{id:"automated-backups",children:"Automated Backups"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# backup.sh\n\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_DIR="/backups"\n\n# Database backup\npg_dump -h localhost -U abp_user abp_react_prod > $BACKUP_DIR/db_backup_$DATE.sql\n\n# Application files backup\ntar -czf $BACKUP_DIR/app_backup_$DATE.tar.gz /path/to/your/app\n\n# Upload to cloud storage (example: AWS S3)\naws s3 cp $BACKUP_DIR/db_backup_$DATE.sql s3://your-backup-bucket/\naws s3 cp $BACKUP_DIR/app_backup_$DATE.tar.gz s3://your-backup-bucket/\n\n# Cleanup old backups (keep last 7 days)\nfind $BACKUP_DIR -name "*.sql" -mtime +7 -delete\nfind $BACKUP_DIR -name "*.tar.gz" -mtime +7 -delete\n'})}),"\n",(0,i.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,i.jsx)(n.h3,{id:"production-optimizations",children:"Production Optimizations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// next.config.mjs\nconst nextConfig = {\n  // Enable SWC minification\n  swcMinify: true,\n  \n  // Optimize bundles\n  experimental: {\n    optimizeCss: true,\n    optimizePackageImports: ['@radix-ui/react-icons'],\n  },\n  \n  // Compress responses\n  compress: true,\n  \n  // Optimize images\n  images: {\n    formats: ['image/webp', 'image/avif'],\n    minimumCacheTTL: 60 * 60 * 24 * 30, // 30 days\n  },\n  \n  // Security headers\n  async headers() {\n    return [\n      {\n        source: '/(.*)',\n        headers: securityHeaders,\n      },\n    ]\n  },\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-deployment-issues",children:"Common Deployment Issues"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Environment Variables Not Loading"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify all required variables are set"}),"\n",(0,i.jsx)(n.li,{children:"Check variable names match exactly"}),"\n",(0,i.jsx)(n.li,{children:"Restart the application after changes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Build Failures"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check Node.js version compatibility"}),"\n",(0,i.jsx)(n.li,{children:"Verify all dependencies are installed"}),"\n",(0,i.jsx)(n.li,{children:"Review build logs for specific errors"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Authentication Issues"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify OpenID Connect configuration"}),"\n",(0,i.jsx)(n.li,{children:"Check SSL/HTTPS configuration"}),"\n",(0,i.jsx)(n.li,{children:"Validate redirect URIs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Database Connection Problems"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check database server accessibility"}),"\n",(0,i.jsx)(n.li,{children:"Verify connection strings"}),"\n",(0,i.jsx)(n.li,{children:"Test database credentials"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"debug-commands",children:"Debug Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check application logs\ndocker logs abp-react-container\npm2 logs abp-react\ntail -f /var/log/nginx/error.log\n\n# Test connectivity\ncurl -I https://your-domain.com\ncurl https://your-domain.com/api/health\n\n# Check SSL certificate\nopenssl s_client -connect your-domain.com:443 -servername your-domain.com\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Security"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use HTTPS everywhere"}),"\n",(0,i.jsx)(n.li,{children:"Implement proper authentication"}),"\n",(0,i.jsx)(n.li,{children:"Regular security updates"}),"\n",(0,i.jsx)(n.li,{children:"Monitor for vulnerabilities"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enable caching"}),"\n",(0,i.jsx)(n.li,{children:"Optimize images"}),"\n",(0,i.jsx)(n.li,{children:"Use CDN for static assets"}),"\n",(0,i.jsx)(n.li,{children:"Monitor application performance"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Reliability"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement health checks"}),"\n",(0,i.jsx)(n.li,{children:"Set up monitoring and alerting"}),"\n",(0,i.jsx)(n.li,{children:"Regular backups"}),"\n",(0,i.jsx)(n.li,{children:"Disaster recovery plan"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Scalability"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use load balancers"}),"\n",(0,i.jsx)(n.li,{children:"Implement horizontal scaling"}),"\n",(0,i.jsx)(n.li,{children:"Database optimization"}),"\n",(0,i.jsx)(n.li,{children:"Cache strategies"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"This deployment guide provides multiple options for hosting your ABP React application. Choose the platform that best fits your requirements, budget, and technical expertise."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var r=s(6540);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);